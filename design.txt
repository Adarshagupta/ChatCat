(function() {
    function loadChatbot() {
        var chatbotDiv = document.createElement('div');
        chatbotDiv.id = 'ai-chatbot';
        chatbotDiv.innerHTML = `
            <div id="chatbot-popup-button" class="chatbot-popup-button">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
                </svg>
            </div>
            <div id="chatbot-container" class="chatbot-container" style="display: none;">
                <div id="chat-header" class="chatbot-header">
                    <span>AI Assistant</span>
                    <svg id="chatbot-close" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <line x1="18" y1="6" x2="6" y2="18"></line>
                        <line x1="6" y1="6" x2="18" y2="18"></line>
                    </svg>
                </div>
                <div id="chatbot-content" class="chatbot-content">
                    <div id="chat-messages" class="chat-messages"></div>
                    <div id="chat-input" class="chat-input">
                        <input type="text" id="user-input" placeholder="Type your message...">
                        <button id="send-button">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <line x1="22" y1="2" x2="11" y2="13"></line>
                                <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
                            </svg>
                        </button>
                    </div>
                    <p class="powered-by">powered by <a href="#">NeuroWeb</a></p>               
                </div>
            </div>
        `;
        document.body.appendChild(chatbotDiv);
        
        var style = document.createElement('style');
        style.textContent = `
            #ai-chatbot {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
    font-family: 'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.chatbot-popup-button {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    background: linear-gradient(135deg, #3B82F6, #2563EB);
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    box-shadow: 0 4px 6px rgba(59, 130, 246, 0.5);
    transition: transform 0.3s ease, box-shadow 0.3s ease, background 0.3s ease;
    opacity: 0;
    transform: translateY(20px);
}

.chatbot-popup-button:hover {
    transform: scale(1.1);
    box-shadow: 0 6px 8px rgba(59, 130, 246, 0.6);
    background: linear-gradient(135deg, #2563EB, #3B82F6);
}

.chatbot-popup-button:active {
    transform: scale(0.95);
}

.chatbot-popup-button svg {
    width: 30px;
    height: 30px;
    color: white;
}

.chatbot-container {
    width: 380px;
    height: 600px;
    background: #ffffff;
    border-radius: 16px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    overflow: hidden;
    transition: transform 0.3s ease, opacity 0.3s ease, box-shadow 0.3s ease;
    position: absolute;
    bottom: 80px;
    right: 0;
    transform: scale(0.9) translateY(20px);
    opacity: 0;
    pointer-events: none;
    transform-origin: bottom right;
}

.chatbot-container.show {
    transform: scale(1) translateY(0);
    opacity: 1;
    pointer-events: all;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
}

.chatbot-header {
    background: linear-gradient(135deg, #3B82F6, #2563EB);
    color: white;
    padding: 15px;
    font-weight: 600;
    font-size: 18px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.chatbot-content {
    height: calc(100% - 60px);
    display: flex;
    flex-direction: column;
    background: #F7FAFC;
}

.chat-messages {
    flex-grow: 1;
    overflow-y: auto;
    padding: 20px;
    background: #ffffff;
    border-top: 1px solid #E2E8F0;
    border-bottom: 1px solid #E2E8F0;
}

.chat-input {
    padding: 10px;
    border-top: 1px solid #E2E8F0;
    display: flex;
    background-color: #F7FAFC;
}

#user-input {
    flex-grow: 1;
    padding: 12px 18px;
    border: 1px solid #E2E8F0;
    border-radius: 30px;
    margin-right: 10px;
    font-size: 14px;
    background-color: #ffffff;
    transition: all 0.3s ease;
}

#user-input:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.5);
    border-color: #3B82F6;
}

#send-button {
    background: linear-gradient(135deg, #3B82F6, #2563EB);
    color: white;
    border: none;
    padding: 12px;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
}

#send-button:hover {
    background: linear-gradient(135deg, #2563EB, #3B82F6);
    transform: scale(1.05);
}

.message {
    margin-bottom: 20px;
    display: flex;
    flex-direction: column;
    animation: fadeIn 0.3s ease-out;
    opacity: 0;
    transform: translateY(10px);
    animation: messageAppear 0.3s forwards;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

@keyframes messageAppear {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.message p {
    display: inline-block;
    padding: 12px 18px;
    border-radius: 18px;
    max-width: 80%;
    line-height: 1.4;
    font-size: 14px;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

.ai-message p {
    background-color: #F3F4F6;
    color: #1F2937;
    align-self: flex-start;
    border-bottom-left-radius: 4px;
}

.user-message {
    align-items: flex-end;
}

.user-message p {
    background: linear-gradient(135deg, #3B82F6, #2563EB);
    color: white;
    border-bottom-right-radius: 4px;
}

.powered-by {
    text-align: center;
    font-size: 12px;
    color: #A0AEC0;
    margin: 0;
    padding: 5px;
    background-color: #F7FAFC;
}

.powered-by a {
    color: #3B82F6;
    text-decoration: none;
    font-weight: 600;
}

.replying-status {
    display: flex;
    align-items: center;
    padding: 10px 15px;
    background-color: #F3F4F6;
    border-radius: 18px;
    margin-bottom: 15px;
    font-size: 14px;
    color: #4A5568;
}

.replying-status .dots {
    display: flex;
    margin-left: 8px;
}

.replying-status .dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: #3B82F6;
    margin: 0 2px;
    animation: pulse 1.5s infinite ease-in-out;
}

.replying-status .dot:nth-child(2) {
    animation-delay: 0.2s;
}

.replying-status .dot:nth-child(3) {
    animation-delay: 0.4s;
}

@keyframes pulse {
    0%, 100% { opacity: 0.4; transform: scale(0.8); }
    50% { opacity: 1; transform: scale(1); }
}

@media (max-width: 480px) {
    #ai-chatbot .chatbot-container {
        width: 100%;
        height: 100%;
        bottom: 0;
        right: 0;
        border-radius: 0;
    }
    #ai-chatbot .chatbot-content {
        height: calc(100% - 60px);
    }
}
        `;
        document.head.appendChild(style);
        
        chatbotDiv.innerHTML += `
            <audio id="message-received-sound" src="https://assets.mixkit.co/active_storage/sfx/2354/2354-preview.mp3"></audio>
            <audio id="toggle-sound" src="https://assets.mixkit.co/active_storage/sfx/2356/2356-preview.mp3"></audio>
        `;

        function playSound(soundId) {
            const sound = document.getElementById(soundId);
            sound.play();
        }

        function getConversationHistory() {
            const history = localStorage.getItem('conversationHistory');
            return history ? JSON.parse(history) : [];
        }

        function saveConversationHistory(history) {
            localStorage.setItem('conversationHistory', JSON.stringify(history));
        }

        function displayConversationHistory() {
            const conversationHistory = getConversationHistory();
            conversationHistory.forEach(message => {
                addMessage(message.role === 'user' ? 'You' : 'AI', message.content);
            });
        }

        window.chatWithAI = async function(input) {
            const conversationHistory = getConversationHistory();
            conversationHistory.push({ role: 'user', content: input });

            try {
                const response = await fetch('https://chatcat-moo7.onrender.com/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        input: input,
                        api_key: '{api_key}',
                        history: conversationHistory
                    })
                });
                const data = await response.json();
                conversationHistory.push({ role: 'assistant', content: data.response });
                saveConversationHistory(conversationHistory);
                return data;
            } catch (error) {
                console.error('Error:', error);
                return {error: `Error: ${error.message || 'Unknown error occurred'}`};
            }
        };

        window.addMessage = function(sender, message, productData = null) {
            const chatMessages = document.getElementById('chat-messages');
            const messageElement = document.createElement('div');
            messageElement.className = `message ${sender === 'You' ? 'user-message' : 'ai-message'}`;
            
            if (productData) {
                messageElement.innerHTML = `
                    <p>${message}</p>
                    <div class="product-carousel">
                        ${productData.map(product => `
                            <div class="product-card">
                                <img src="${product.image_url}" alt="${product.name}" class="product-image">
                                <h3>${product.name}</h3>
                                <p>${product.price}</p>
                                <p>${product.description}</p>
                                <a href="${product.product_url}" target="_blank">View Product</a>
                            </div>
                        `).join('')}
                    </div>
                `;
            } else {
                messageElement.innerHTML = `<p>${message}</p>`;
            }
            
            chatMessages.appendChild(messageElement);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        };

        window.showReplyingStatus = function() {
            const chatMessages = document.getElementById('chat-messages');
            const statusElement = document.createElement('div');
            statusElement.className = 'message ai-message';
            statusElement.innerHTML = `
                <p>AI is replying...</p>
                <div class="dot-container">
                    <div class="dot"></div>
                    <div class="dot"></div>
                    <div class="dot"></div>
                </div>
            `;
            chatMessages.appendChild(statusElement);
            chatMessages.scrollTop = chatMessages.scrollHeight;
            return statusElement;
        };

        window.removeReplyingStatus = function(statusElement) {
            if (statusElement && statusElement.parentNode) {
                statusElement.parentNode.removeChild(statusElement);
            }
        };

        window.sendMessage = async function() {
            const userInput = document.getElementById('user-input');
            const message = userInput.value.trim();
            if (message) {
                addMessage('You', message);
                userInput.value = '';
                const statusElement = showReplyingStatus();
                const response = await chatWithAI(message);
                removeReplyingStatus(statusElement);
                if (response.error) {
                    addMessage('AI', response.error);
                } else {
                    addMessage('AI', response.response, response.product_data);
                }
                saveConversationHistory(response.history);
                playSound('message-received-sound');
            }
        };

        window.scrollCarousel = function(direction) {
            const container = document.querySelector('.product-carousel');
            const scrollAmount = 220; // Adjust this value based on your card width + margin
            container.scrollBy({ left: direction * scrollAmount, behavior: 'smooth' });
        };

        // Add event listener for the send button
        document.getElementById('send-button').addEventListener('click', sendMessage);

        // Add event listener for the Enter key in the input field
        document.getElementById('user-input').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

        // Add toggle functionality
        document.getElementById('chatbot-popup-button').addEventListener('click', function() {
            var container = document.getElementById('chatbot-container');
            if (container.style.display === 'none') {
                container.style.display = 'flex';
                setTimeout(() => {
                    container.classList.add('show');
                }, 10); // Small delay to ensure the display change has taken effect
                document.getElementById('user-input').focus();
                playSound('toggle-sound');
                displayConversationHistory(); // Display conversation history when the chatbot is opened
            } else {
                container.classList.remove('show');
                setTimeout(() => {
                    container.style.display = 'none';
                }, 300); // Wait for the animation to complete before hiding
                playSound('toggle-sound');
            }
        });

        document.getElementById('chatbot-close').addEventListener('click', function() {
            var container = document.getElementById('chatbot-container');
            container.classList.remove('show');
            setTimeout(() => {
                container.style.display = 'none';
            }, 300);
            playSound('toggle-sound');
        });

        // Modify the styles for the popup button and container
        var additionalStyles = document.createElement('style');
        additionalStyles.textContent = `
            #ai-chatbot .chatbot-popup-button {
                opacity: 1;
                transform: translateY(0);
                transition: transform 0.3s ease;
            }

            #ai-chatbot .chatbot-container {
                transform: translateY(20px);
                opacity: 0;
                transition: transform 0.3s ease, opacity 0.3s ease;
                pointer-events: none;
            }

            #ai-chatbot .chatbot-container.show {
                transform: translateY(0);
                opacity: 1;
                pointer-events: all;
            }

            #ai-chatbot .chatbot-popup-button:hover {
                transform: scale(1.1);
            }

            @media (max-width: 480px) {
                #ai-chatbot .chatbot-container.show {
                    transform: translateY(0);
                }
            }
        `;
        document.head.appendChild(additionalStyles);

        // Initialize chat
        addMessage('AI', 'Hello! How can I assist you today?');

        // Add a subtle entrance animation
        setTimeout(() => {
            document.getElementById('chatbot-popup-button').style.opacity = '1';
            document.getElementById('chatbot-popup-button').style.transform = 'translateY(0)';
        }, 500);
    }

    // Load chatbot when the page is fully loaded
    if (document.readyState === 'complete') {
        loadChatbot();
    } else {
        window.addEventListener('load', loadChatbot);
    }

    // Add some additional styles for better responsiveness and animations
    var additionalStyles = document.createElement('style');
    additionalStyles.textContent = `
        @media (max-width: 480px) {
            #ai-chatbot .chatbot-container {
                width: 100%;
                height: 100%;
                bottom: 0;
                right: 0;
                border-radius: 0;
            }
            #ai-chatbot .chatbot-content {
                height: calc(100% - 60px);
            }
        }

        #ai-chatbot .chatbot-popup-button {
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.3s ease, transform 0.3s ease;
        }

        #ai-chatbot .chatbot-container {
            transform: translateY(20px);
            opacity: 0;
            transition: transform 0.3s ease, opacity 0.3s ease;
        }

        #ai-chatbot .chatbot-container.show {
            transform: translateY(0);
            opacity: 1;
        }

        #ai-chatbot .message {
            opacity: 0;
            transform: translateY(10px);
            animation: messageAppear 0.3s forwards;
        }

        @keyframes messageAppear {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    `;
    document.head.appendChild(additionalStyles);

})();