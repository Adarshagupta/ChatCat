(function() {
    function loadChatbot() {
        var chatbotDiv = document.createElement('div');
        chatbotDiv.id = 'ai-chatbot';
        chatbotDiv.innerHTML = `
            <div id="chatbot-popup-button" class="chatbot-popup-button">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
                </svg>
            </div>
            <div id="chatbot-container" class="chatbot-container" style="display: none;">
                <div id="chat-header" class="chatbot-header">
                    <span>AI Assistant</span>
                    <svg id="chatbot-close" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <line x1="18" y1="6" x2="6" y2="18"></line>
                        <line x1="6" y1="6" x2="18" y2="18"></line>
                    </svg>
                </div>
                <div id="chatbot-content" class="chatbot-content">
                    <div id="chat-messages" class="chat-messages"></div>
                    <div id="chat-input" class="chat-input">
                        <input type="text" id="user-input" placeholder="Type your message...">
                        <button id="send-button">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <line x1="22" y1="2" x2="11" y2="13"></line>
                                <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
                            </svg>
                        </button>
                    </div>
                    <p class="powered-by">powered by <a href="#">NeuroWeb</a></p>               
                </div>
            </div>
        `;
        document.body.appendChild(chatbotDiv);
        
        var style = document.createElement('style');
        style.textContent = `
            /* Your existing styles here */
        `;
        document.head.appendChild(style);
        
        chatbotDiv.innerHTML += `
            <audio id="message-received-sound" src="https://assets.mixkit.co/active_storage/sfx/2354/2354-preview.mp3"></audio>
            <audio id="toggle-sound" src="https://assets.mixkit.co/active_storage/sfx/2356/2356-preview.mp3"></audio>
        `;

        function playSound(soundId) {
            const sound = document.getElementById(soundId);
            sound.play();
        }

        window.chatWithAI = async function(input) {
            try {
                const response = await fetch('https://chatcat-moo7.onrender.com/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        input: input,
                        api_key: '{api_key}'
                    })
                });
                const data = await response.json();
                return data;
            } catch (error) {
                console.error('Error:', error);
                return {error: `Error: ${error.message || 'Unknown error occurred'}`};
            }
        };

        window.addMessage = function(sender, message) {
            const chatMessages = document.getElementById('chat-messages');
            const messageElement = document.createElement('div');
            messageElement.className = `message ${sender === 'You' ? 'user-message' : 'ai-message'}`;
            
            if (typeof message === 'object') {
                if (message.product_data) {
                    const productData = message.product_data;
                    messageElement.innerHTML = `
                        <p>${message.response}</p>
                        <div class="product-carousel">
                            <button class="carousel-button" onclick="scrollCarousel(-1)">&#10094;</button>
                            <div class="product-container">
                                <div class="product-card">
                                    <img src="${productData.image_url}" alt="${productData.name}" class="product-image">
                                    <h3>${productData.name}</h3>
                                    <p class="price">${productData.price}</p>
                                    <p class="description">${productData.description}</p>
                                    <a href="${productData.product_url}" class="shop-button" target="_blank">Shop Now</a>
                                </div>
                            </div>
                            <button class="carousel-button" onclick="scrollCarousel(1)">&#10095;</button>
                        </div>
                    `;
                } else if (message.response) {
                    messageElement.innerHTML = `<p>${message.response}</p>`;
                } else if (message.error) {
                    messageElement.innerHTML = `<p class="error">${message.error}</p>`;
                } else {
                    messageElement.innerHTML = `<p>Unexpected response format</p>`;
                }
            } else {
                messageElement.innerHTML = `<p>${message}</p>`;
            }
            
            chatMessages.appendChild(messageElement);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        };

        window.showReplyingStatus = function() {
            const chatMessages = document.getElementById('chat-messages');
            const statusElement = document.createElement('div');
            statusElement.className = 'replying-status';
            statusElement.innerHTML = `
                AI is replying
                <div class="dots">
                    <div class="dot"></div>
                    <div class="dot"></div>
                    <div class="dot"></div>
                </div>
            `;
            chatMessages.appendChild(statusElement);
            chatMessages.scrollTop = chatMessages.scrollHeight;
            return statusElement;
        };

        window.removeReplyingStatus = function(statusElement) {
            if (statusElement && statusElement.parentNode) {
                statusElement.parentNode.removeChild(statusElement);
            }
        };

        window.sendMessage = async function() {
            const userInput = document.getElementById('user-input');
            const message = userInput.value.trim();
            if (message) {
                addMessage('You', message);
                userInput.value = '';
                const statusElement = showReplyingStatus();
                const response = await chatWithAI(message);
                removeReplyingStatus(statusElement);
                addMessage('AI', response);
                playSound('message-received-sound');
            }
        };

        window.scrollCarousel = function(direction) {
            const container = document.querySelector('.product-container');
            const scrollAmount = 220; // Adjust this value based on your card width + margin
            container.scrollBy({ left: direction * scrollAmount, behavior: 'smooth' });
        };

        // Add event listener for the send button
        document.getElementById('send-button').addEventListener('click', sendMessage);

        // Add event listener for the Enter key in the input field
        document.getElementById('user-input').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

        // Add toggle functionality
        document.getElementById('chatbot-popup-button').addEventListener('click', function() {
            var container = document.getElementById('chatbot-container');
            if (container.style.display === 'none') {
                container.style.display = 'flex';
                container.classList.add('show');
                document.getElementById('user-input').focus();
                playSound('toggle-sound');
            } else {
                container.style.display = 'none';
                container.classList.remove('show');
                playSound('toggle-sound');
            }
        });

        // Modify the close functionality to include sound
        document.getElementById('chatbot-close').addEventListener('click', function() {
            document.getElementById('chatbot-container').style.display = 'none';
            document.getElementById('chatbot-container').classList.remove('show');
            playSound('toggle-sound');
        });

        // Modify the styles for the popup button and container
        var additionalStyles = document.createElement('style');
        additionalStyles.textContent = `
            /* Your existing styles here */
        `;
        document.head.appendChild(additionalStyles);

        // Initialize chat with a welcome message and some initial prompts
        addMessage('AI', 'Hi there! I\'m your AI Assistant. How can I help you today?');
        addMessage('AI', 'You can ask me about:');
        addMessage('AI', '1. Product recommendations');
        addMessage('AI', '2. Order status');
        addMessage('AI', '3. General inquiries');
        addMessage('AI', 'Feel free to type your question below!');

        // Add a subtle entrance animation
        setTimeout(() => {
            document.getElementById('chatbot-popup-button').style.opacity = '1';
            document.getElementById('chatbot-popup-button').style.transform = 'translateY(0)';
        }, 500);
    }

    // Load chatbot when the page is fully loaded
    if (document.readyState === 'complete') {
        loadChatbot();
    } else {
        window.addEventListener('load', loadChatbot);
    }

    // Add some additional styles for better responsiveness and animations
    var additionalStyles = document.createElement('style');
    additionalStyles.textContent = `
        /* Your existing styles here */
    `;
    document.head.appendChild(additionalStyles);

})();